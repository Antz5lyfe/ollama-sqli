import getpass
import os
import warnings
from langgraph.prebuilt import create_react_agent
from pydantic import BaseModel, Field
from langgraph_supervisor import create_supervisor
from langchain.chat_models import init_chat_model
from langgraph.graph import StateGraph, MessagesState, START, END
from langchain_core.messages import HumanMessage, AIMessage
from pytz import all_timezones_set
from mcp_client import get_mcp_tools
import asyncio
from langchain_community.utilities import GoogleSerperAPIWrapper
from langchain_core.tools import Tool
import sqlite3
from langgraph.checkpoint.sqlite import SqliteSaver
from dotenv import load_dotenv
from langchain_core.prompts import ChatPromptTemplate
from langgraph.prebuilt.chat_agent_executor import AgentStateWithStructuredResponse


class AgentOutput(BaseModel):
    sentence: str = Field(
        description="A random sentence generated by the agent. It must contain a word longer than 12 characters"
    )


class OuterState(AgentStateWithStructuredResponse):
    output: AgentOutput
    context: str


load_dotenv()

prompt = ChatPromptTemplate(
    [
        (
            "system",
            "You are an evil humorous assistant that speaks in Spanish. {context}",
        )
    ]
)


def agent_node(state: OuterState):
    agent = create_react_agent(
        model="openai:gpt-4.1-mini",
        prompt=prompt,
        response_format=("You speak in German", AgentOutput),
        name="random_sentence_generator",
        state_schema=OuterState,
        tools=[],
    )

    resp = agent.invoke(
        {
            "messages": state["messages"],
            "context": "Your sentence should be affirmative and positive.",
        }
    )
    print(resp["messages"][-1], resp["structured_response"])
    return {"messages": [resp["messages"][-1]], "output": resp["structured_response"]}


graph = StateGraph(OuterState)
graph.add_node("random_sentence_generator", agent_node)
graph.add_edge(START, "random_sentence_generator")
c = graph.compile()
result = c.invoke(
    {
        "messages": [
            HumanMessage(content="Snickers"),
            AIMessage(
                content="Snickers is a popular chocolate bar, but did you know that some species of whales can dive to depths deeper than the tallest buildings in the world?"
            ),
            HumanMessage(content="Tell me more about those whales and the buildings"),
        ]
    }
)
